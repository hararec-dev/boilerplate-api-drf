# Generated by Django 5.2.3 on 2025-06-29 03:30

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("business", "0001_initial"),
        ("tenancies", "0004_tenantauditpolicy_tenant_available_credits_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CreditTransaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="amount"
                    ),
                ),
                (
                    "balance_after",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="balance after"
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("purchase", "Purchase"),
                            ("usage", "Usage"),
                            ("adjustment", "Adjustment"),
                        ],
                        max_length=20,
                        verbose_name="transaction type",
                    ),
                ),
                (
                    "reference_id",
                    models.BigIntegerField(
                        blank=True,
                        help_text="Link to payments/invoices.",
                        null=True,
                        verbose_name="reference ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tenancies.tenant",
                        verbose_name="tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "credit transaction",
                "verbose_name_plural": "credit transactions",
                "db_table": "credit_transactions",
            },
        ),
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("open", "Open"),
                            ("paid", "Paid"),
                            ("uncollectible", "Uncollectible"),
                            ("void", "Voided"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "issued_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="issued at"
                    ),
                ),
                ("due_date", models.DateField(verbose_name="due date")),
                ("period_start", models.DateField(verbose_name="period start")),
                ("period_end", models.DateField(verbose_name="period end")),
                (
                    "currency",
                    models.CharField(
                        default="USD", max_length=3, verbose_name="currency"
                    ),
                ),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="subtotal"
                    ),
                ),
                (
                    "tax_total",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="total taxes",
                    ),
                ),
                (
                    "discount_total",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="total discounts",
                    ),
                ),
                (
                    "amount_due",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="amount due"
                    ),
                ),
                (
                    "amount_paid",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="amount paid",
                    ),
                ),
                (
                    "invoice_pdf_url",
                    models.URLField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="invoice PDF URL",
                    ),
                ),
                (
                    "gateway_invoice_id",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="gateway invoice ID",
                    ),
                ),
                (
                    "subscription",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="business.subscription",
                        verbose_name="subscription",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tenancies.tenant",
                        verbose_name="tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "invoice",
                "verbose_name_plural": "invoices",
                "db_table": "invoices",
            },
        ),
        migrations.CreateModel(
            name="InvoiceLineItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField(verbose_name="description")),
                ("quantity", models.IntegerField(default=1, verbose_name="quantity")),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="unit price"
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="amount"
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("subscription", "Subscription"),
                            ("usage", "Usage"),
                            ("one_time", "One-time charge"),
                            ("discount", "Discount"),
                            ("tax", "Tax"),
                            ("credit", "Credit"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="type",
                    ),
                ),
                (
                    "period_starts_at",
                    models.DateField(
                        blank=True, null=True, verbose_name="period start"
                    ),
                ),
                (
                    "period_ends_at",
                    models.DateField(blank=True, null=True, verbose_name="period end"),
                ),
                (
                    "unit_price_tier",
                    models.JSONField(
                        blank=True,
                        help_text="The pricing tier that was applied.",
                        null=True,
                        verbose_name="unit price tier",
                    ),
                ),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="line_items",
                        to="billing.invoice",
                        verbose_name="invoice",
                    ),
                ),
                (
                    "usage_feature",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="business.feature",
                        verbose_name="usage feature",
                    ),
                ),
            ],
            options={
                "verbose_name": "invoice line",
                "verbose_name_plural": "invoice lines",
                "db_table": "invoice_line_items",
            },
        ),
        migrations.CreateModel(
            name="PaymentMethod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "method_type",
                    models.CharField(
                        choices=[
                            ("credit_card", "Credit Card"),
                            ("paypal", "PayPal"),
                            ("bank_account", "Bank Account"),
                        ],
                        max_length=50,
                        verbose_name="method type",
                    ),
                ),
                (
                    "gateway_payment_method_id",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="gateway method ID"
                    ),
                ),
                (
                    "is_default",
                    models.BooleanField(default=False, verbose_name="is default"),
                ),
                (
                    "details",
                    models.JSONField(
                        blank=True,
                        help_text="Last 4 digits, expiration date, etc. NEVER sensitive data.",
                        null=True,
                        verbose_name="details",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tenancies.tenant",
                        verbose_name="tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "payment method",
                "verbose_name_plural": "payment methods",
                "db_table": "payment_methods",
            },
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="amount"
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="USD", max_length=3, verbose_name="currency"
                    ),
                ),
                (
                    "gateway_transaction_id",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="gateway transaction ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("succeeded", "Succeeded"),
                            ("failed", "Failed"),
                            ("refunded", "Refunded"),
                        ],
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "paid_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="paid at"),
                ),
                (
                    "details",
                    models.JSONField(
                        blank=True,
                        help_text="Used to store gateway responses, etc.",
                        null=True,
                        verbose_name="details",
                    ),
                ),
                (
                    "invoice",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="billing.invoice",
                        verbose_name="invoice",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tenancies.tenant",
                        verbose_name="tenant",
                    ),
                ),
                (
                    "payment_method",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="billing.paymentmethod",
                        verbose_name="payment method",
                    ),
                ),
            ],
            options={
                "verbose_name": "payment",
                "verbose_name_plural": "payments",
                "db_table": "payments",
            },
        ),
        migrations.CreateModel(
            name="UsageRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Supports fractional values (e.g., GB, hours).",
                        max_digits=18,
                        verbose_name="quantity",
                    ),
                ),
                (
                    "recorded_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="recorded at"),
                ),
                ("event_time", models.DateTimeField(verbose_name="event time")),
                (
                    "source_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="source IP"
                    ),
                ),
                (
                    "reference_id",
                    models.CharField(
                        blank=True,
                        help_text="External resource ID (e.g., transaction ID).",
                        max_length=255,
                        null=True,
                        verbose_name="reference ID",
                    ),
                ),
                (
                    "feature",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="business.feature",
                        verbose_name="feature",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tenancies.tenant",
                        verbose_name="tenant",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "usage record",
                "verbose_name_plural": "usage records",
                "db_table": "usage_records",
            },
        ),
        migrations.CreateModel(
            name="InvoiceLineItemUsageRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "invoice_line_item",
                    models.ForeignKey(
                        db_column="invoice_line_item_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usage_records",
                        to="billing.invoicelineitem",
                    ),
                ),
                (
                    "usage_record",
                    models.ForeignKey(
                        db_column="usage_record_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invoice_line_items",
                        to="billing.usagerecord",
                    ),
                ),
            ],
            options={
                "verbose_name": "Invoice Line Item Usage Record",
                "verbose_name_plural": "Invoice Line Item Usage Records",
                "db_table": "invoice_line_item_usage_records",
            },
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(fields=["tenant"], name="idx_invoices_tenant_id"),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(fields=["status"], name="idx_invoices_status"),
        ),
        migrations.AlterUniqueTogether(
            name="invoice",
            unique_together={("subscription", "period_end")},
        ),
        migrations.AddIndex(
            model_name="invoicelineitem",
            index=models.Index(fields=["invoice"], name="idx_invoice_line_id"),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(fields=["tenant"], name="idx_payments_tenant_id"),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(fields=["invoice"], name="idx_payments_invoice_id"),
        ),
        migrations.AddIndex(
            model_name="usagerecord",
            index=models.Index(
                fields=["tenant", "feature"], name="idx_usg_rec_tenant_feat"
            ),
        ),
        migrations.AddIndex(
            model_name="usagerecord",
            index=models.Index(
                fields=["event_time"], name="idx_usage_records_event_time"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="invoicelineitemusagerecord",
            unique_together={("invoice_line_item", "usage_record")},
        ),
    ]
