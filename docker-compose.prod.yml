services:
  api:
    build:
      context: .
      target: production
      dockerfile: Dockerfile
    command: >
      bash -c "
      python manage.py migrate --no-input &&
      exec gunicorn --config gunicorn_conf.py config.asgi:application"
    volumes:
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - backend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "${API_CPUS_LIMIT}"
          memory: "${API_MEM_LIMIT}"
        reservations:
          cpus: "${API_CPUS_RESERVATION}"
          memory: "${API_MEM_RESERVATION}"

  nginx:
    image: nginx:1.27.5-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./logs:/var/log/nginx
    ports:
      - "${NGINX_PORT:-8000}:80"
    depends_on:
      - api
    networks:
      - backend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "${NGINX_CPUS_LIMIT}"
          memory: "${NGINX_MEM_LIMIT}"
        reservations:
          cpus: "${NGINX_CPUS_RESERVATION}"
          memory: "${NGINX_MEM_RESERVATION}"

  redis:
    image: redis:8.0.2-alpine
    command: >
      redis-server
      --requirepass "${REDIS_PASSWORD}"
      --save ""
      --appendonly no
      --tcp-backlog 511
      --tcp-keepalive 300
      --loglevel notice
      --logfile ""
      --hz 10
      --bind 0.0.0.0
      --maxmemory "${REDIS_MAXMEMORY}"
      --maxmemory-policy allkeys-lru
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_MAXMEMORY=${REDIS_MAXMEMORY:-512mb}
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    deploy:
      resources:
        limits:
          cpus: "${REDIS_CPUS_LIMIT}"
          memory: "${REDIS_MEM_LIMIT}"
        reservations:
          cpus: "${REDIS_CPUS_RESERVATION}"
          memory: "${REDIS_MEM_RESERVATION}"

networks:
  backend:
    driver: bridge
